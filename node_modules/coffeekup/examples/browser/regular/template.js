function template(data) {var a,i,li,p,s,th,u,ul;a = function(){return __ck.tag('a', arguments);};i = function(){return __ck.tag('i', arguments);};li = function(){return __ck.tag('li', arguments);};p = function(){return __ck.tag('p', arguments);};s = function(){return __ck.tag('s', arguments);};th = function(){return __ck.tag('th', arguments);};u = function(){return __ck.tag('u', arguments);};ul = function(){return __ck.tag('ul', arguments);};var __slice = Array.prototype.slice;var __hasProp = Object.prototype.hasOwnProperty;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };var __extends = function(child, parent) {  for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; }  function ctor() { this.constructor = child; }  ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype;  return child; };var __indexOf = Array.prototype.indexOf || function(item) {  for (var i = 0, l = this.length; i < l; i++) {    if (this[i] === item) return i;  } return -1; };    var coffeescript, comment, doctype, h, tag, text, __ck, _base, _base2, _ref, _ref2, _ref3;        if ((_ref = data.options) != null) {      _ref;    } else {      data.options = {};    };        if ((_ref2 = (_base = data.options).format) != null) {      _ref2;    } else {      _base.format = false;    };        if ((_ref3 = (_base2 = data.options).autoescape) != null) {      _ref3;    } else {      _base2.autoescape = false;    };    __ck = {      options: data.options,      buffer: [],      doctypes: {        '5': '<!DOCTYPE html>',        'xml': '<?xml version="1.0" encoding="utf-8" ?>',        'default': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',        'transitional': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',        'strict': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',        'frameset': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',        '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',        'basic': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',        'mobile': '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',        'ce': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">'      },      self_closing: ['area', 'base', 'basefont', 'br', 'col', 'frame', 'hr', 'img', 'input', 'link', 'meta', 'param'],      render_attrs: function(obj) {        var k, str, v;        str = '';        for (k in obj) {          v = obj[k];          str += " " + k + "=\"" + (this.esc(v)) + "\"";        }        return str;      },      esc: function(txt) {        if (this.options.autoescape) {          return h(txt);        } else {          return String(txt);        }      },      tabs: 0,      repeat: function(string, count) {        return Array(count + 1).join(string);      },      indent: function() {        if (this.options.format) {          return this.text(this.repeat('  ', this.tabs));        }      },      tag: function(name, opts) {        var o, result, _i, _j, _len, _len2;        this.indent();        text("<" + name);        for (_i = 0, _len = opts.length; _i < _len; _i++) {          o = opts[_i];          if (typeof o === 'object') {            text(this.render_attrs(o));          }        }        if (__indexOf.call(this.self_closing, name) >= 0) {          text(' />');          if (this.options.format) {            text('\n');          }        } else {          text('>');          for (_j = 0, _len2 = opts.length; _j < _len2; _j++) {            o = opts[_j];            switch (typeof o) {              case 'string':              case 'number':                text(this.esc(o));                break;              case 'function':                if (this.options.format) {                  text('\n');                }                this.tabs++;                result = o.call(data);                if (typeof result === 'string') {                  this.indent();                  text(this.esc(result));                  if (this.options.format) {                    text('\n');                  }                }                this.tabs--;                this.indent();            }          }          text("</" + name + ">");          if (this.options.format) {            text('\n');          }        }        return null;      }    };    h = function(txt) {      return String(txt).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');    };    doctype = function(type) {      if (type == null) {        type = 5;      }      text(__ck.doctypes[type]);      if (data.options.format) {        return text('\n');      }    };    text = function(txt) {      __ck.buffer.push(String(txt));      return null;    };    comment = function(cmt) {      text("<!--" + cmt + "-->");      if (data.options.format) {        return text('\n');      }    };    tag = function() {      var name;      name = arguments[0];      delete arguments[0];      return __ck.tag(name, arguments);    };    coffeescript = function(code) {      return script(";(" + code + ")();");    };    (function(){ul(function() {  var guy, _i, _len, _ref, _results;  _ref = this.stooges;  _results = [];  for (_i = 0, _len = _ref.length; _i < _len; _i++) {    guy = _ref[_i];    _results.push(li(guy));  }  return _results;});}).call(data);return __ck.buffer.join('');}
